{"version":3,"sources":["App.js","index.js"],"names":["App","useState","userCount","localStorage","getItem","setDefaultValue","count","setCount","isCounting","setIsCounting","timerIdRef","useRef","useEffect","setItem","current","setInterval","prevCont","clearInterval","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAqEeA,EA5DH,WACV,MAA0BC,mBANJ,WACtB,IAAMC,EAAYC,aAAaC,QAAQ,SACvC,OAAOF,GAAaA,EAAY,EAIGG,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACMC,EAAaC,iBAAO,MAiC1B,OAjBAC,qBAAU,WACRT,aAAaU,QAAQ,QAASP,KAC7B,CAACA,IAEJM,qBAAU,WAOR,OANIJ,IACFE,EAAWI,QAAUC,aAAY,WAC/BR,GAAS,SAAAS,GAAQ,OAAIA,EAAW,OAC/B,MAGE,WACLN,EAAWI,SAAWG,cAAcP,EAAWI,SAC/CJ,EAAWI,QAAU,QAEtB,CAACN,IAGF,qBAAKU,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,6CACA,6BAAKZ,IACL,sBAAKY,UAAU,kBAAf,UACE,mBACEA,UAAU,qCACVC,QAvCU,WAEhBV,GADED,IAoCE,SAIGA,EAAa,OAAS,UAEzB,mBACEU,UAAU,qCACVC,QArCU,WAClBF,cAAcP,EAAWI,SACzBL,GAAc,GACdF,EAAS,IAgCH,4BCpDVa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2371b8f6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport './App.css';\n\nconst setDefaultValue = () => {\n  const userCount = localStorage.getItem('count');\n  return userCount ? +userCount : 0;\n};\n\nconst App = () => {\n  const [count, setCount] = useState(setDefaultValue());\n  const [isCounting, setIsCounting] = useState(false);\n  const timerIdRef = useRef(null);\n\n  const onStartStop = () => {\n    if (isCounting) {\n      setIsCounting(false);\n    } else {\n      setIsCounting(true);\n    }\n  };\n\n  const handleReset = () => {\n    clearInterval(timerIdRef.current);\n    setIsCounting(false);\n    setCount(0);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('count', count);\n  }, [count]);\n\n  useEffect(() => {\n    if (isCounting) {\n      timerIdRef.current = setInterval(() => {\n        setCount(prevCont => prevCont + 1);\n      }, 1000);\n    }\n\n    return () => {\n      timerIdRef.current && clearInterval(timerIdRef.current);\n      timerIdRef.current = null;\n    };\n  }, [isCounting]);\n\n  return (\n    <div className='App'>\n      <div className='timer-container'>\n        <h1>React Timer</h1>\n        <h2>{count}</h2>\n        <div className='btns-container '>\n          <a\n            className='waves-effect waves-light btn-large'\n            onClick={onStartStop}\n          >\n            {isCounting ? 'Stop' : 'Start'}\n          </a>\n          <a\n            className='waves-effect waves-light btn-large'\n            onClick={handleReset}\n          >\n            Reset\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}